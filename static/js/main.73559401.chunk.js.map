{"version":3,"sources":["component/showText.js","component/inputWord.js","component/youtubeVideos.js","App.jsx","component/apiKey.js","reportWebVitals.js","index.js"],"names":["ShowText","props","textStatus","InputWord","className","htmlFor","Button","type","variant","color","onClick","Input","id","placeholder","onChange","value","YoutubeVideos","video","videos","map","i","url","videoId","titleCutted","snippet","title","slice","width","height","src","frameBorder","href","channelId","target","App","state","keyWord","handleSubmit","bind","handleText","event","this","setState","axios","get","then","res","data","items","catch","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAWeA,EATE,SAAAC,GAEf,OACE,qCACE,6BAHW,gBAIX,6BAAKA,EAAMC,iB,gBCoBFC,EAvBG,SAAAF,GAChB,OACE,sBAAKG,UAAU,WAAf,UACE,uBAAOC,QAAQ,WAAf,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNC,QAAST,EAAMS,QAJjB,4BASF,cAACC,EAAA,EAAD,CACEC,GAAG,WACHC,YAAY,oBACZC,SAAUb,EAAMa,SAChBC,MAAOd,EAAMc,YCcNC,EAhCO,SAAAf,GACpB,IAAMgB,EAAQhB,EAAMiB,OAAOC,KAAI,SAACF,EAAOG,GACrC,IAAMC,EAAM,iCAAmCJ,EAAML,GAAGU,QAElDC,EADQN,EAAMO,QAAQC,MACFC,MAAM,EAAG,IAAM,MAEzC,OACE,sBAA4BtB,UAAU,WAAtC,UACE,6BAAKmB,IACL,wBACEX,GAAG,WACHL,KAAK,WACLoB,MAAM,MACNC,OAAO,MACPC,IAAKR,EACLS,YAAY,MAEd,cAACxB,EAAA,EAAD,CACEE,QAAQ,WACRC,MAAM,UACNsB,KAAI,0CAAqCd,EAAMO,QAAQQ,WACvDC,OAAO,SAJT,gEAVQhB,EAAML,GAAGU,YAsBvB,OAAO,mCAAGL,K,iBCsCGiB,G,wDA7Db,WAAajC,GAAQ,IAAD,8BAClB,cAAMA,IACDkC,MAAQ,CACXjB,OAAQ,GACRkB,QAAS,GACTlC,WAAY,6BAEd,EAAKmC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBARA,E,8CAYpB,SAAYE,GACVC,KAAKC,SAAS,CAAEN,QAASI,EAAMP,OAAOlB,U,0BAIxC,WAAiB,IAAD,OAGRM,EAAG,iFAA6EoB,KAAKN,MAAMC,QAAxF,6CC7BD,2CDgCRO,IACGC,IAAIvB,GACJwB,MAAK,SAAAC,GACJ,EAAKJ,SAAS,CACZxB,OAAQ4B,EAAIC,KAAKC,MACjB9C,WAAY,uCAGf+C,OAAM,WACL,EAAKP,SAAS,CAAExC,WAAY,oC,oBAIlC,WACE,OACE,qCACE,iCACE,qBAAKE,UAAU,6BAAf,SACE,qBAAKA,UAAU,eAAf,SACE,wDAKN,cAAC,EAAD,CAAUF,WAAYuC,KAAKN,MAAMjC,aACjC,cAAC,EAAD,CACEQ,QAAS+B,KAAKJ,aACdvB,SAAU2B,KAAKF,WACfxB,MAAO0B,KAAKN,MAAMC,UAEpB,qBAAKhC,UAAU,UAAf,SACE,cAAC,EAAD,CAAec,OAAQuB,KAAKN,MAAMjB,kB,GAvD1BgC,IAAMC,YEITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73559401.chunk.js","sourcesContent":["import React from 'react'\n\nconst ShowText = props => {\n  const header = 'Hello, User'\n  return (\n    <>\n      <h2>{header}</h2>\n      <h2>{props.textStatus}</h2>\n    </>\n  )\n}\nexport default ShowText\n","import React from 'react'\nimport Input from '@material-ui/core/Input'\nimport { Button } from '@material-ui/core'\n\nconst InputWord = props => {\n  return (\n    <div className='InputBox'>\n      <label htmlFor='InputBox'>\n        <Button\n          type='submit'\n          variant='contained'\n          color='primary'\n          onClick={props.onClick}\n        >\n          検索\n        </Button>\n      </label>\n      <Input\n        id='InputBox'\n        placeholder='Search on YouTube'\n        onChange={props.onChange}\n        value={props.value}\n      />\n    </div>\n  )\n}\n\nexport default InputWord\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nconst YoutubeVideos = props => {\n  const video = props.videos.map((video, i) => {\n    const url = 'https://www.youtube.com/embed/' + video.id.videoId\n    const title = video.snippet.title\n    const titleCutted = title.slice(0, 19) + '...'\n\n    return (\n      <div key={video.id.videoId} className='videoBox'>\n        <h2>{titleCutted}</h2>\n        <iframe\n          id='ytplayer'\n          type='ytplayer'\n          width='480'\n          height='270'\n          src={url}\n          frameBorder='5'\n        />\n        <Button\n          variant='outlined'\n          color='primary'\n          href={`https://www.youtube.com/channel/${video.snippet.channelId}`}\n          target='_blank'\n        >\n          チャンネルに移動\n        </Button>\n      </div>\n    )\n  })\n\n  return <>{video}</>\n}\n\nexport default YoutubeVideos\n","import React from 'react'\nimport ShowText from './component/showText'\nimport Key from './component/apiKey'\nimport InputWord from './component/inputWord'\nimport YoutubeVideos from './component/youtubeVideos'\nimport axios from 'axios'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      videos: [],\n      keyWord: '',\n      textStatus: '↓Type keyWords↓'\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleText = this.handleText.bind(this)\n  }\n\n  // inputに入力された文字をstate.keyWordへ挿入。\n  handleText (event) {\n    this.setState({ keyWord: event.target.value })\n  }\n\n  // 検索ボタンをクリックで動作。YoutubeAPIの取得。\n  handleSubmit () {\n    // ${Key}にはGoogleAPIsで取得したAPIキーを格納。\n    // ヒットした動画を再生回数順で３つ表示。\n    const url = `https://www.googleapis.com/youtube/v3/search?type=video&part=snippet&q=${this.state.keyWord}&order=viewCount&maxResults=3&key=${Key}`\n\n    // urlから動画データを取得、state.videoに配列で格納。\n    axios\n      .get(url)\n      .then(res => {\n        this.setState({\n          videos: res.data.items,\n          textStatus: 'Successfully to get Youtube API'\n        })\n      })\n      .catch(() => {\n        this.setState({ textStatus: 'Failure to get YouTube API' })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <header>\n          <div className='container header-container'>\n            <div className='header-inner'>\n              <h1>Youtube Searcher</h1>\n            </div>\n          </div>\n        </header>\n\n        <ShowText textStatus={this.state.textStatus} />\n        <InputWord\n          onClick={this.handleSubmit}\n          onChange={this.handleText}\n          value={this.state.keyWord}\n        />\n        <div className='wrapper'>\n          <YoutubeVideos videos={this.state.videos} />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App\n","const Key = 'AIzaSyAnr3F6q6xrh-TAYLBuq8R1n-rFQzeTvjg'\n\nexport default Key\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}